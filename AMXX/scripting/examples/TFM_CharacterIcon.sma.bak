/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <fakemeta>
#include <celltrie>

#include <CHARACTER_MOD>

#include <mmcl_util>


#include <player_api>
#include <celltrie>
#include <cstrike>

#include <cstrike_pdatas>

#include <GamePlay_Included/Tools.inc>

/**********************************************************/

#define PLUGIN "Character Hud"
#define VERSION "-[No Info]-"
#define AUTHOR "Nguyen Duy Linh"

/**********************************************************/



/*				CONSTANTS				*/
#define HUD_DRAW_TIME	-1.0
#define TEXT_DRAW_TIME	9999.0

#define TASK_DRAW_HEALTH_BAR	1000

#define HP_HUD_DIRECTORY "HP_HUD"

/*				TRIE SECTION				*/
new Trie:iPlayerModel
new Trie:iHudPosition[33]

/*				  TRIE KEY				*/

#define KEY_CHARACTER_HUD_X_TGA "CHARACTER_HUD_X_TGA"
#define KEY_CHARACTER_HUD_Y_TGA "CHARACTER_HUD_Y_TGA"

#define KEY_CHARACTER_AC_X_TGA	"CHARACTER_AC_X_TGA"
#define KEY_CHARACTER_AC_Y_TGA	"CHARACTER_AC_Y_TGA"

#define KEY_CHARACTER_HP_X_TGA	"CHARACTER_HP_X_TGA"
#define KEY_CHARACTER_HP_Y_TGA	"CHARACTER_HP_Y_TGA"

public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	if (!iPlayerModel)
		iPlayerModel = TrieCreate()
		
	register_concmd("TFM_HUD/CharacterHud_X", "CHARACTER_TGA_X")
	register_concmd("TFM_HUD/CharacterHud_Y", "CHARACTER_TGA_Y")
	
	register_concmd("TFM_HUD/AC_X", "CHARACTER_AC_TGA_X")
	register_concmd("TFM_HUD/AC_Y", "CHARACTER_AC_TGA_Y")
	
	register_concmd("TFM_HUD/HP_X", "CHARACTER_HP_TGA_X")
	register_concmd("TFM_HUD/HP_Y", "CHARACTER_HP_TGA_Y")
	
	register_event("Health","Event_Health","be")
	register_event("Battery", "Event_Armor", "be")
	
	
	register_forward( FM_ClientUserInfoChanged, "fw_ClientUserInfoChanged" )
}

/************************************************************************/

public client_putinserver(id)
{
	if (is_user_bot(id))
		return
		
		
	if (!iHudPosition[id])
		iHudPosition[id] = TrieCreate()
		
	
	set_task(1.5, "TASK_DrawHealthInfo", id + TASK_DRAW_HEALTH_BAR)
}	

public client_disconnect(id)
{
	if (is_user_bot(id))
		return
		
		
	if (iHudPosition[id])
		TrieDestroy(iHudPosition[id])
}

/************************************************************************/

/*				CONSOLE COMMAND				*/

//	CHARACTER HUD [TGA]

public CHARACTER_TGA_X(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_HUD_X_TGA, szArg)
}

public CHARACTER_TGA_Y(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_HUD_Y_TGA, szArg)
}

/**********************************************************************************/


//		Armor Text [TGA]
public CHARACTER_AC_TGA_X(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_AC_X_TGA, szArg)
}

public CHARACTER_AC_TGA_Y(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_AC_Y_TGA, szArg)
}

/**********************************************************************************/


//		Hit Point [TGA]
public CHARACTER_HP_TGA_X(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_HP_X_TGA, szArg)
}

public CHARACTER_HP_TGA_Y(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_trie_key(id, KEY_CHARACTER_HP_Y_TGA, szArg)
}

/**********************************************************************************/

/*			            	EVENT	 			 	  */

public Event_Health(id)
{
	Display_Armor(id)
	Display_HitPoint(id)
}

public Event_Armor(id)
{		
	Display_Armor(id)
	Display_HitPoint(id)
}


/**********************************************************************************/

/*			            	FORWARD	 			 	  */

public fw_ClientUserInfoChanged(id)
{
	if (!is_user_connected(id))
		return
		
	if (!is_user_alive(id))
		return
		
	if (is_user_bot(id))
		return
		
	
	new szCurrentModel[32], szLastModel[32]
	
	new szId[3]
	formatex(szId, sizeof szId - 1, "%d", id)
	TrieGetString(iPlayerModel, szId, szLastModel, sizeof szLastModel - 1)
	
	cs_get_user_model(id, szCurrentModel, sizeof szCurrentModel - 1)
	
	if (equal(szCurrentModel, szLastModel))
		return
	
	Draw_CharacterIcon(id)
}

public csred_PlayerKilledPost(id, iKiller)
{
	if (!is_user_connected(id))
		return
		
	if (is_user_bot(id))
		return
		
	
	MMCL_RemoveImage(id, HUDTYPE_TEXT, TEXT_AC_CHANNEL)
	MMCL_RemoveImage(id, HUDTYPE_TEXT, TEXT_HP_CHANNEL)
	MMCL_RemoveImage(id, HUDTYPE_TGA, CHANNEL_HUD_HEALTH_TGA)
	
	
	new szId[3]
	formatex(szId, sizeof szId - 1 , "%d", id)
	TrieSetString(iPlayerModel, szId, "")
}

public csred_PlayerSpawnPost(id)
{	
	if (is_user_bot(id))
		return
		
		
	if (task_exists(id + TASK_DRAW_HEALTH_BAR))
		remove_task(id + TASK_DRAW_HEALTH_BAR)
		
	new szId[3]
	formatex(szId, sizeof szId - 1 , "%d", id)
	TrieSetString(iPlayerModel, szId, "")
	
	set_task(1.5, "TASK_DrawHealthInfo", id + TASK_DRAW_HEALTH_BAR)
	
}

/**********************************************************************************/

public TASK_DrawHealthInfo(TASKID)
{
	new id = TASKID - TASK_DRAW_HEALTH_BAR
		
		
	Display_Armor(id)
	Display_HitPoint(id)
	Draw_CharacterIcon(id)	
}

/**********************************************************************************/

stock Toggle_CharacterHud(id, szHUD[], iStatus)
{
	if (is_user_bot(id) || !is_user_connected(id))
		return
	
	if (!iStatus)
	{
		MMCL_RemoveImage(id, HUDTYPE_TGA, CHANNEL_HUD_HEALTH_TGA)
		return
	}
	
			
	new Float:fX, Float:fY
	new szFullHud[128]
	
	
	get_float_from_key(id, KEY_CHARACTER_HUD_X_TGA, fX)
	get_float_from_key(id, KEY_CHARACTER_HUD_Y_TGA, fY)
		
	formatex(szFullHud, sizeof szFullHud - 1, "%s/%s/%s.tga", TFM_TGA_DIRECTORY, HP_HUD_DIRECTORY, szHUD)
	
	if (!file_exists(szFullHud))
		return
		
	formatex(szFullHud, sizeof szFullHud - 1, "%s/%s/%s", TFM_TGA_DIRECTORY, HP_HUD_DIRECTORY, szHUD)
		
	
	MMCL_DrawTGA(id, szFullHud, 255, 255, 255, 255, fX, fY, 1, 0, 0.0, 0.0, -1.0, CHANNEL_HUD_HEALTH_TGA)
}


stock Display_HitPoint(id)
{
	if (!is_user_connected(id))
		return
		
	if (is_user_bot(id))
		return
	
	new Float:fX
	new Float:fY
	
	new szHealthAmount[5]
	
	formatex(szHealthAmount, sizeof szHealthAmount - 1, "%d", get_user_health(id))
	
	
	get_float_from_key(id, KEY_CHARACTER_HP_X_TGA, fX)
	get_float_from_key(id, KEY_CHARACTER_HP_Y_TGA, fY)		
		
	// DRAW AC
	MMCL_DrawText(id, szHealthAmount, 255, 255, 255, fX, fY, 1, TEXT_DRAW_TIME, TEXT_HP_CHANNEL)
		
	
}

stock Display_Armor(id)
{
		
	if (!is_user_connected(id))
		return
		
	if (is_user_bot(id))
		return
		
	new Float:fX
	new Float:fY
	
	new szArmorAmount[5]
	
	formatex(szArmorAmount, sizeof szArmorAmount - 1, "%d", get_user_armor(id))
	
	
	get_float_from_key(id, KEY_CHARACTER_AC_X_TGA, fX)
	get_float_from_key(id, KEY_CHARACTER_AC_Y_TGA, fY)
	
		
	// DRAW AC
	MMCL_DrawText(id, szArmorAmount, 255, 255, 255,  fX, fY, 1, TEXT_DRAW_TIME, TEXT_AC_CHANNEL)
		
	
}
	
stock Draw_CharacterIcon(id)
{
	if (!is_user_connected(id))
		return
		
	if (is_user_bot(id))
		return
		
		
	new szHpHud[128]
	
	new iCharacterId = get_user_character(id)
		
	if (!is_user_zombie(id))
	{
		new szSPR[32]
		
		if (iCharacterId > -1)
		{
			new CsTeams:iTeam = cs_get_user_team(id)	
			get_character_hud(iCharacterId, iTeam, szSPR, sizeof szSPR - 1)
		}
		else
		{
			new iInternalModel = fm_get_user_internal_model(id)
			formatex(szSPR, sizeof szSPR - 1, CS_INTERNAL_MODEL[iInternalModel])
		}
		
		if (get_user_health(id))
		{
			formatex(szHpHud, sizeof szHpHud - 1, "HEALTH_%s_100", szSPR)
			Toggle_CharacterHud(id, szHpHud, 1)
		}
				
	}
	else
	{
		new szSPR[128]
		
		new iClassId = get_user_zombie_class(id)
		
		get_class_hp_hud(iClassId, szSPR, sizeof szSPR - 1)
		
		if (get_user_health(id))
		{
			formatex(szHpHud, sizeof szHpHud - 1, "HEALTH_%s_100", szSPR)
			Toggle_CharacterHud(id, szHpHud, 1)
		}
		
	}
}
		
stock fm_get_user_internal_model(id)
	return get_pdata_int(id, m_iInternalModel , 5)

stock fm_set_user_internal_model(id, iInternalModel)
	set_pdata_int(id, m_iInternalModel, iInternalModel, 5)

stock set_trie_key(id, szKey[], szArg[])
{
	if (is_user_bot(id))
		return
		
	if (!iHudPosition[id])
		return
		
	TrieSetString(iHudPosition[id], szKey, szArg)
	
}

stock get_float_from_key(id, szKey[], &Float:fOutput)
{
	if (is_user_bot(id))
		return
		
	if (!iHudPosition[id])
		return
		
	new szArg[10]
	TrieGetString(iHudPosition[id], szKey, szArg, sizeof szArg - 1)
	fOutput = str_to_float(szArg)
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
