/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <cstrike>
#include <mmcl_util>
#include <SDK_Hook>



#include <AccountManager>

#include <GamePlay_Included/Tools.inc>



#define PLUGIN "Mission Message"
#define VERSION "1.0"
#define AUTHOR "Nguyen Duy Linh"


/*			DIRECTORY			*/
#define MISSION_MESSAGE_DIR 	"MISSION_MESSAGE"

/********************************************************/

/*			HUD LIST			*/

#define ZOMBIE_WIN_SPR "ZOMBIE_WIN"
#define SOLDIER_WIN_SPR "SOLDIER_WIN"
#define MISSION_SUCCESS_SPR "MISSION_SUCCESS"
#define MISSION_FAILED_SPR "MISSION_FAILED"
#define ESCAPE_TEAM_CHANGE "TEAM_CHANGE"
#define ESCAPE_SUCCESS_SPR "ESCAPE_SUCCESSFULLY"
#define ROUND_DRAW_SPR "ROUND_DRAW"
#define GAMEOVER_SPR "GAME_OVER"

/********************************************************/

/*			TRIE 				*/
// Trie Storage
new Trie:iUserInfo[33]

#define SECTION_MISSION_X_TGA	"MISSION_X_TGA"
#define SECTION_MISSION_Y_TGA	"MISSION_Y_TGA"

#define HUD_HOLD_TIME	1.0
#define HUD_FADE_IN_TIME	2.0
#define HUD_FADE_OUT_TIME	2.0

/********************************************************/

new iMaxPlayers




public plugin_init() 
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_concmd("TFM_HUD/Message/Mission_X", "TGA_Mission_X")
	register_concmd("TFM_HUD/Message/Mission_Y", "TGA_Mission_Y")
	
}

public plugin_cfg()
	iMaxPlayers = get_maxplayers()

public client_putinserver(id)
{
	if (is_user_bot(id))
		return
		
	iUserInfo[id] = TrieCreate()
}

public client_disconnect(id)
{
	if (iUserInfo[id]) 	
		TrieDestroy(iUserInfo[id])
}
/*			Client Command				*/



// Mission Message [TGA]

public TGA_Mission_X(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_float_to_trie(id, SECTION_MISSION_X_TGA, str_to_float(szArg))
}

public TGA_Mission_Y(id, iLevel, iCid)
{
	if (!cmd_access(id, iLevel, iCid, 2))
		return
		
	new szArg[10]
	read_argv(1, szArg, sizeof szArg - 1)
	set_float_to_trie(id, SECTION_MISSION_Y_TGA, str_to_float(szArg))
}
/*			GAME-PLAY : ESCAPE			*/


/****************************************************************/

/*		   GAME-PLAY : DEATH-MATCH			*/

public RoundEvent_TerWin()
{
	for (new id = 1 ; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
		
		new CsTeams:iTeam = cs_get_user_team(id)
		
		if (iTeam == CS_TEAM_T)
		{
			draw_message_hud(id, MISSION_SUCCESS_SPR)
		}
		else if (iTeam == CS_TEAM_CT)
		{
			draw_message_hud(id, MISSION_FAILED_SPR)
		}
	}
}

public RoundEvent_CtWin()
{
	for (new id = 1 ; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
		
		new CsTeams:iTeam = cs_get_user_team(id)
		
		if (iTeam == CS_TEAM_T)
		{
			draw_message_hud(id, MISSION_FAILED_SPR)
		}
		else if (iTeam == CS_TEAM_CT)
		{
			draw_message_hud(id, MISSION_SUCCESS_SPR)
		}
	}
}

public RoundEvent_Draw()
{
	
	for (new id = 1 ; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
		
		
		draw_message_hud(id, ROUND_DRAW_SPR)
		
	}
}

public RoundEvent_Restart()
{
	for (new id = 1; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
			
		MMCL_RemoveImage(id, HUDTYPE_TGA, CHANNEL_MISSION_MESSAGE)
	}
}

public RoundEvent_Begin()
{
	for (new id = 1; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
			
		MMCL_RemoveImage(id, HUDTYPE_TGA, CHANNEL_MISSION_MESSAGE)
	}
}
/****************************************************************/

/*
// ZOMBIE MODE

public g4u_zombie_round_finish(winteam, human_score, zombie_score)
{
		
	new players[32], number
	get_players(players, number)
	
	new iZmToggle = g4u_get_zombie_toggle()
		
		
	for (new i = 0; i < number; i++)
	{
		new id = players[i]	
		if (is_user_bot(id))
			continue
			
		if (winteam == WIN_HUMAN)
		{
			if (iZmToggle == 5)
			{
				new CsTeams:team = cs_get_user_team(id)
				if (team == CS_TEAM_T)
				{
					//client_print(id, print_center, "MISSION FAILED !")
					meta_showhud(id, MISSION_FAILED_SPR)
				}
				else if (team == CS_TEAM_CT)
				{
					//client_print(id, print_center, "MISSION SUCCESS !")
					meta_showhud(id, MISSION_SUCCESS_SPR)
				}
				continue
			}
			//client_print(id, print_center, "SOLDIER WIN")
			meta_showhud(id, SOLDIER_WIN_SPR)
			client_cmd(id, "spk %s", SOLDIER_WIN)
			continue
		}
		if (winteam == WIN_ZOMBIE)
		{
			if (iZmToggle == 5)
			{
				new CsTeams:team = cs_get_user_team(id)
				if (team == CS_TEAM_T)
				{
					//client_print(id, print_center, "MISSION SUCCESS !")
					meta_showhud(id, MISSION_SUCCESS_SPR)
				}
				else if (team == CS_TEAM_CT)
				{
					//client_print(id, print_center, "MISSION FAILED !")
					meta_showhud(id, MISSION_FAILED_SPR)
				}
				continue
			}
			//client_print(id, print_center, "ZOMBIE WIN")
			meta_showhud(id, ZOMBIE_WIN_SPR)
			client_cmd(id, "spk %s", ZOMBIE_WIN)
			continue
		}
	}
}
*/

/****************************************************************/

public TDM_game_over(iTeam)
{
	switch (iTeam)
	{
		case 1 :
			RoundEvent_TerWin()
		case 2 :
			RoundEvent_CtWin()
		default : RoundEvent_Draw()
	}
}


/*			GAME-PLAY : FFA				*/

public FFA_game_over(winner)
{
	for (new id = 1 ; id <= iMaxPlayers; id++)
	{
		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
		
		
		draw_message_hud(id, GAMEOVER_SPR)
	}
}


/****************************************************************/

/*		    GAME-PLAY : GUN GAME			*/

public GunGame_GameExit(iWinner)
{
	for (new id = 1 ; id <= iMaxPlayers; id++)
	{

		if (!is_user_connected(id))
			continue
			
		if (is_user_bot(id))
			continue
			
		if (id == iWinner)
			draw_message_hud(id, MISSION_SUCCESS_SPR)
		else	draw_message_hud(id, MISSION_FAILED_SPR)
	}
}

/****************************************************************/

stock draw_message_hud(id, szInputHud[])
{
	if (!is_user_connected(id))
		return
	
	if (is_user_bot(id))
		return
		
	new szHud[128]
	
	MMCL_RemoveImage(id, HUDTYPE_TGA, CHANNEL_MISSION_MESSAGE)
	
	formatex(szHud, sizeof szHud - 1, "%s/%s/%s.tga", TFM_TGA_DIRECTORY, MISSION_MESSAGE_DIR, szInputHud)
		
	if (!file_exists(szHud))
		return
	
	formatex(szHud, sizeof szHud - 1, "%s/%s/%s", TFM_TGA_DIRECTORY, MISSION_MESSAGE_DIR, szInputHud)
	
	new Float:fX
	new Float:fY
	
	get_float_from_trie(id, SECTION_MISSION_X_TGA, fX) 
	get_float_from_trie(id, SECTION_MISSION_Y_TGA, fY)
	
	
	MMCL_DrawTGA(id, szHud, 255, 255, 255, 255, fX, fY, 1, 0, 0.0, 0.0, 5.0, CHANNEL_MISSION_MESSAGE)
	
}



stock set_float_to_trie(id, szKey[], Float:fInput)
{
	if (is_user_bot(id))
		return
		
	if (!iUserInfo[id])
		return
		
	TrieSetCell(iUserInfo[id],szKey, fInput)
}

stock get_float_from_trie(id, szKey[], &Float:fOutput)
{
	if (is_user_bot(id))
		return
		
	if (!iUserInfo[id])
		return
		
	TrieGetCell(iUserInfo[id],szKey, fOutput)
}
