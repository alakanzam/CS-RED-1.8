/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <fakemeta>
#include <cstrike>
#include <engine>


#include <cstrike_pdatas>
#include <cswpn_ultilities>
#include <player_api>

#include <TFM_WPN>
#include <AccountManager>

#include <GamePlay_Included/Tools.inc>
#include <GamePlay_Included/GamePlay_GG.inc>


/*************************************************************/

#define PLUGIN "[TM] BOT WEAPON"
#define VERSION "1.7"
#define AUTHOR "Nguyen Duy Linh"

/*************************************************************/

#define TASK_CZ_FUNCTION	1000
#define TASK_GIVE_WEAPON	2000


#define SetPlayerBit(%1,%2)      (%1 |= (1<<(%2&31)))
#define ClearPlayerBit(%1,%2)    (%1 &= ~(1 <<(%2&31)))
#define CheckPlayerBit(%1,%2)    (%1 & (1<<(%2&31)))
	
new bit_HasC4

#define BPA_MULTI	3

public plugin_init() 
	register_plugin(PLUGIN, VERSION, AUTHOR)


public csred_PlayerSpawnPost(id)
{
	if (!is_user_bot(id))
		return
		
	if (cs_get_user_vip(id))
		return
		
	remove_task(id + TASK_GIVE_WEAPON)
	set_task(1.0, "GiveBotWeapon_TASK", id + TASK_GIVE_WEAPON)
}

public GiveBotWeapon_TASK(TASKID)
{
	new id = TASKID - TASK_GIVE_WEAPON
	
	if (!is_user_alive(id))
		return
		
	if (!is_user_bot(id))
		return
		
	if (is_gungame_on())
		return
		
	if (user_has_weapon(id, CSW_C4))
		SetPlayerBit(bit_HasC4, id)
		
	fm_strip_user_weapons(id)
	//	Increase HP of bot by 150 or more
	
	/*
	new iHealth = get_user_health(id)
		
	new Float:fHealth 
	fHealth = float(iHealth) + random_float(0.0, 50.0)
	
	set_pev(id, pev_health, fHealth)
	*/
	
	/*
	if (is_zombie_on())
	{
		new iRandom = random(10)
		
		if (iRandom > 4)
			cs_set_user_armor(id, random_num(60, 160), CS_ARMOR_KEVLAR)
	}
	else
	{
		
		new iArmorType = random(2)
		new iArmorAmount = random_num(100, 200)
		
		if (iArmorType < 1)
			cs_set_user_armor(id, iArmorAmount, CS_ARMOR_KEVLAR)
		else	cs_set_user_armor(id, iArmorAmount, CS_ARMOR_VESTHELM)
		set_pev(id, pev_armorvalue, float(iArmorAmount))
		
	} 
	
	*/
	
	if (is_gungame_on())
		return
		
	GiveBotWeapon(id)
}

stock GiveBotWeapon(id)
{	
	new iVIP = cs_get_user_vip(id)
	
	if (iVIP)
		cs_set_user_vip(id, 0, 0, 0)
		
	set_pdata_int(id, m_fHasPrimary, 0, 5)
	
	new iMapEquipType = get_map_equip_type()
	fm_give_item(id, "weapon_knife")
			
	
	give_secondary_wpn(id, iMapEquipType)
	give_primary_wpn(id, iMapEquipType)
	give_melee(id)
	give_grenade(id, iMapEquipType)
	give_sniper(id, iMapEquipType)
	
	
	
	if (CheckPlayerBit(bit_HasC4, id))
	{
		fm_give_item(id, "weapon_c4")
		engclient_cmd(id, "weapon_c4")
		cs_set_user_plant(id, 1, 1)
	}
	
	if (iVIP)
		cs_set_user_vip(id)
		
	ClearPlayerBit(bit_HasC4, id)
	return 
}

stock fm_strip_user_weapons(index) {
	new ent = create_entity("player_weaponstrip");
	if (!pev_valid(ent))
		return 0;

	dllfunc(DLLFunc_Spawn, ent);
	dllfunc(DLLFunc_Use, ent, index);
	engfunc(EngFunc_RemoveEntity, ent);

	return 1;
}

stock fm_give_item(index, const item[]) {
	if (!equal(item, "weapon_", 7) && !equal(item, "ammo_", 5) && !equal(item, "item_", 5) && !equal(item, "tf_weapon_", 10))
		return 0;

	new ent = create_entity(item);
	if (!pev_valid(ent))
		return 0;

	new Float:origin[3];
	pev(index, pev_origin, origin);
	set_pev(ent, pev_origin, origin);
	set_pev(ent, pev_spawnflags, pev(ent, pev_spawnflags) | SF_NORESPAWN);
	dllfunc(DLLFunc_Spawn, ent);

	new save = pev(ent, pev_solid);
	dllfunc(DLLFunc_Touch, ent, index);
	if (pev(ent, pev_solid) != save)
		return ent;

	engfunc(EngFunc_RemoveEntity, ent);

	return -1;
}

stock give_secondary_wpn(id, iMapEquipType)
{
	if (iMapEquipType != EQUIP_FULL && iMapEquipType != EQUIP_PISTOL)
		return
	
	
			
	new secondary_weapon_id[] = {CSW_USP, CSW_GLOCK18, CSW_DEAGLE, CSW_P228, CSW_ELITE, CSW_FIVESEVEN}

	
	new secondary_weapon_type = random_num(0, 15)
	
	
	if (secondary_weapon_type > 7)
	{
		new iSecondaryCount = get_sec_wpn_number()
				
		if (iSecondaryCount)
		{
			new iRandomSecId = random(iSecondaryCount - 1)
			if(give_player_sec_wpn(id, iRandomSecId))
				UT_SetUserBPA(id, get_sec_wpn_real_id(iRandomSecId), get_sec_wpn_bpa(iRandomSecId) * BPA_MULTI)
			else	secondary_weapon_type = 6
		}
		else secondary_weapon_type = 6
	}
	
	if (secondary_weapon_type <= 7)
	{	
		new iRandomId = random(sizeof secondary_weapon_id)
		new iWeaponId = secondary_weapon_id[iRandomId]
				
		new szWeaponName[32]
		get_weaponname(iWeaponId, szWeaponName, sizeof szWeaponName - 1)
		fm_give_item(id, szWeaponName)
		UT_SetUserBPA(id, iWeaponId, UT_Get_CS_DefaultBpa(iWeaponId) * BPA_MULTI)
		engclient_cmd(id, szWeaponName)
	}
		
}

stock give_primary_wpn(id, iMapEquipType)
{
	new primary_weapon_type = random_num(0, 17)
	
	if (iMapEquipType != EQUIP_FULL)
		return
		
			
	primary_weapon_type = random(19)
				
				
	if (0 < primary_weapon_type < 13)
	{
		new iPrimaryWpnAmount = get_pw_number()
					
		if (iPrimaryWpnAmount)
		{
			new iPrimaryWpnId = random(iPrimaryWpnAmount)
			
			if (get_pw_ammo(iPrimaryWpnId))
			{
				if (!give_user_pw(id, iPrimaryWpnId))	
					primary_weapon_type = 14
				else	UT_SetUserBPA(id, get_pw_real_id(iPrimaryWpnId), get_pw_bpammo(iPrimaryWpnId) * BPA_MULTI)
			}
			else	primary_weapon_type = 14
		}
		else	primary_weapon_type = 14
	}
	if ((13 <= primary_weapon_type))
	{
		new primary_weapon_id[] = {CSW_M3, CSW_XM1014,
				CSW_MP5NAVY, CSW_TMP, CSW_P90, CSW_MAC10, CSW_UMP45,
				CSW_FAMAS, CSW_GALIL, CSW_AK47, CSW_M4A1, CSW_SG552, CSW_AUG,
				CSW_SCOUT, CSW_AWP, CSW_G3SG1, CSW_SG550,
				CSW_M249}
			
		new iRandomId = random(sizeof primary_weapon_id - 1)
		new iWeaponId = primary_weapon_id[iRandomId]
		new szWeaponName[32]
		get_weaponname(iWeaponId, szWeaponName, sizeof szWeaponName - 1)
		fm_give_item(id, szWeaponName)
		engclient_cmd(id, szWeaponName)
					
		UT_SetUserBPA(id, iWeaponId, UT_Get_CS_DefaultBpa(iWeaponId) * BPA_MULTI)
	}
}

stock give_melee(id)
{
	new melee_type = random_num(0, 15)
	if (!(6 <= melee_type <= 10))
		return
				
	new iMeleeNumber = get_melee_number()
	give_user_melee(id, random(iMeleeNumber))
		
}
stock give_grenade(id, iMapEquipType)
{
	if (iMapEquipType != EQUIP_FULL)
		return
	
	new grenade_type = random_num(0, 20)
	
				
	if (grenade_type <= 10)
	{
		new iGrenadeCount = get_grenade_count()
						
		if (iGrenadeCount)
			give_user_grenade(id, random(iGrenadeCount))
		else	grenade_type = 11
	}
	
	new szWeaponName[32]
	
	new iWeaponId
	(10 < grenade_type < 13)?(iWeaponId = CSW_HEGRENADE):(iWeaponId = CSW_FLASHBANG)
	
	get_weaponname(iWeaponId, szWeaponName, sizeof szWeaponName - 1)
	
	fm_give_item(id, szWeaponName)
	UT_SetUserBPA(id, iWeaponId, 1)
	
	engclient_cmd(id, szWeaponName)
	
}
	
stock give_sniper(id, iMapEquipType)
{
	new primary_weapon_type = random_num(0, 19)
	
	if (iMapEquipType != EQUIP_SNIPER)
		return
	
	if (cs_get_user_hasprim(id))
		UT_StripPrimaryWeapon(id)
			
	primary_weapon_type = random(14)
				
	if (primary_weapon_type >= 6)
	{
					
		new iPrimaryWeaponNumber = get_pw_number()
		if (!iPrimaryWeaponNumber)
			primary_weapon_type = 5
		else
		{
			new iResult = give_user_pw(id, random(iPrimaryWeaponNumber))
					
			if (!iResult)
				primary_weapon_type = 4
		}
	}
	if (primary_weapon_type < 6)
	{
		
		new sniper_weapon_id[] = {CSW_SCOUT, CSW_AWP, CSW_G3SG1, CSW_SG550}
		
		new iRandomId = random(sizeof sniper_weapon_id - 1)
		new iWeaponId = sniper_weapon_id[iRandomId]
		new szWeaponName[32]
		get_weaponname(iWeaponId, szWeaponName, sizeof szWeaponName - 1)
		fm_give_item(id, szWeaponName)
		UT_SetUserBPA(id, iWeaponId, UT_Get_CS_DefaultBpa(iWeaponId) * BPA_MULTI)
			
			
	}
}
