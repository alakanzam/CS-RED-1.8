/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta_util>
#include <cstrike_pdatas>
#include <cswpn_ultilities>
#include <mmcl>
#include <cstrike>
#include <WpnMod_Included/WM_GlobalConstant>

#define PLUGIN "Equipment C4"
#define VERSION "1.0"
#define AUTHOR "-[Redplane]-"

#define C4_MDL	"c4"
#define C4_REPLACE_MDL "c4"

#define C4_V_REPLACE_BODY 0
#define C4_P_REPLACE_BODY 0
#define C4_W_REPLACE_BODY 0

new REPLACE_CS_V_MODEL	=	1
new REPLACE_CS_P_MODEL	=	1
new REPLACE_CS_W_MODEL	=	1

new Trie:iPreventedModel

public plugin_precache()
{
	if (REPLACE_CS_V_MODEL || REPLACE_CS_W_MODEL || REPLACE_CS_P_MODEL)
	{
		if (!iPreventedModel)
			iPreventedModel = TrieCreate()
		
		new szCsModel[32]
		new szWeaponModel[128]
		new szReplaceModel[32]
			
		get_cs_weapon_model(CSW_C4, szCsModel, sizeof szCsModel - 1)
		get_cs_replace_model(CSW_C4, szReplaceModel, sizeof szReplaceModel - 1)
			
		if (REPLACE_CS_V_MODEL)
		{
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/v_%s.mdl", szCsModel)
			TrieSetCell(iPreventedModel, szWeaponModel, 1)
				
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/%s/v_%s.mdl", MODEL_DIRECTORY, szReplaceModel)
			engfunc(EngFunc_PrecacheModel, szWeaponModel)
		}
			
		if (REPLACE_CS_P_MODEL)
		{
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/p_%s.mdl", szCsModel)
			TrieSetCell(iPreventedModel, szWeaponModel, 1)
				
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/%s/p_%s.mdl", MODEL_DIRECTORY, szReplaceModel)
			engfunc(EngFunc_PrecacheModel, szWeaponModel)
		}
			
		if (REPLACE_CS_W_MODEL)
		{
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/w_%s.mdl", szCsModel)
			TrieSetCell(iPreventedModel, szWeaponModel, 1)
			
			TrieSetCell(iPreventedModel, "models/w_backpack.mdl", 1)
			
			formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/%s/w_%s.mdl", MODEL_DIRECTORY, szReplaceModel)
			engfunc(EngFunc_PrecacheModel, szWeaponModel)
			
			register_forward(FM_SetModel, "fw_SetModelPre")
			register_forward(FM_SetModel, "fw_SetModelPost", 1)
		}
		
		register_forward(FM_PrecacheModel, "fw_PrecacheModel")	
		
	}
}

public fw_PrecacheModel(szModel[])
{
	if (TrieKeyExists(iPreventedModel, szModel))
	{
		forward_return(FMV_CELL, 0)
		return FMRES_SUPERCEDE;
	}
	return FMRES_IGNORED
}

public plugin_init() 
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
public fw_SetModelPre(iEnt, szModel[])
{
	if (!pev_valid(iEnt))
		return FMRES_IGNORED
		
	if (!REPLACE_CS_W_MODEL)
		return FMRES_IGNORED
		
	if (!equal(szModel, "models/w_c4.mdl") && !equal(szModel, "models/w_backpack.mdl"))
		return FMRES_IGNORED
		
	new szClassName[32]
	pev(iEnt, pev_classname, szClassName, sizeof szClassName - 1)
	
	if (!equal(szClassName, "weaponbox") && !equal(szClassName, "weapon_", 7) && !equal(szClassName, "grenade"))
		return FMRES_IGNORED
	
	return FMRES_SUPERCEDE
}

public fw_SetModelPost(iEnt, szModel[])
{
	if (!pev_valid(iEnt))
		return
		
	if (!REPLACE_CS_W_MODEL)
		return
		
	if (!equal(szModel, "models/w_c4.mdl") && !equal(szModel, "models/w_backpack.mdl"))
		return
		
	new szClassName[32]
	pev(iEnt, pev_classname, szClassName, sizeof szClassName - 1)
	
	if (!equal(szClassName, "weaponbox") && !equal(szClassName, "weapon_", 7) && !equal(szClassName, "grenade"))
		return
		
	new szCsModel[32], szWorldModel[128]
			
	get_cs_replace_model(CSW_C4, szCsModel, sizeof szCsModel - 1)
	formatex(szWorldModel, sizeof szWorldModel - 1, "models/%s/w_%s.mdl", MODEL_DIRECTORY, szCsModel)
			
	engfunc(EngFunc_SetModel, iEnt, szWorldModel)
	set_pev(iEnt, pev_body, get_cs_w_mdl_subbody(CSW_C4))	
}

public csred_WpnDeploy_Pre(id, iEnt, iWeaponId)
{
	if (!is_user_connected(id))
		return PLUGIN_CONTINUE
		
	if (!is_user_alive(id))
		return PLUGIN_CONTINUE
		
	if (iWeaponId != CSW_C4)
		return PLUGIN_CONTINUE
		
	if (!REPLACE_CS_P_MODEL	&& !REPLACE_CS_V_MODEL)
		return PLUGIN_CONTINUE
		
	DefaultDeploy(id, iEnt, iWeaponId)
	return PLUGIN_HANDLED
}
/*************************************************************************************/

stock get_cs_weapon_model(iWeaponId, szOutput[], iLen)
{
	if (iWeaponId != CSW_C4)
		return 0
		
	formatex(szOutput, iLen, C4_MDL)	
	return 1
}

stock get_cs_replace_model(iWeaponId, szOutput[], iLen)
{
	if (iWeaponId != CSW_C4)
		return 0
		
	formatex(szOutput, iLen, C4_REPLACE_MDL)
	return 1
}

stock get_cs_v_mdl_subbody(iWeaponId)
{	
	if (iWeaponId == CSW_C4)
		return C4_V_REPLACE_BODY
	
	return 0
}

stock get_cs_p_mdl_subbody(iWeaponId)
{
	if (iWeaponId == CSW_C4)
		return C4_P_REPLACE_BODY
	
	return 0
}

stock get_cs_w_mdl_subbody(iWeaponId)
{
	if (iWeaponId == CSW_C4)
		return C4_W_REPLACE_BODY
	
	return 0
}

stock DefaultDeploy(id, iEnt, iWeaponId)
{	
	new szCsModel[32]
	new szWeaponModel[128]
	
	if (REPLACE_CS_V_MODEL)
	{
		get_cs_replace_model(iWeaponId, szCsModel, sizeof szCsModel - 1)
		
		MMCL_SetViewEntityBody(id, get_cs_v_mdl_subbody(iWeaponId))
		
		formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/%s/v_%s.mdl", MODEL_DIRECTORY, szCsModel)
		set_pev(id, pev_viewmodel2, szWeaponModel)
	}
	else
	{
		get_cs_weapon_model(iWeaponId, szCsModel, sizeof szCsModel - 1)
		formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/v_%s.mdl", szCsModel)
		
		set_pev(id, pev_viewmodel2, szWeaponModel)
	
	}
	
	set_pev(id, pev_weaponmodel2, "")
	
	if (REPLACE_CS_P_MODEL)
	{	
		
		get_cs_replace_model(iWeaponId, szCsModel, sizeof szCsModel - 1)
		
		set_pev(iEnt, pev_body, get_cs_p_mdl_subbody(iWeaponId))
		
		formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/%s/p_%s.mdl", MODEL_DIRECTORY, szCsModel)
		engfunc(EngFunc_SetModel, iEnt, szWeaponModel)
	}
	else
	{
		set_pev(iEnt, pev_body, 0)
		get_cs_weapon_model(iWeaponId, szCsModel, sizeof szCsModel - 1)
		formatex(szWeaponModel, sizeof szWeaponModel - 1, "models/p_%s.mdl", szCsModel)
		engfunc(EngFunc_SetModel, iEnt, szWeaponModel)
	}
	
	fm_set_entity_visibility(iEnt, 1)
	
	new iShield = cs_get_user_shield(id)
	new iSilen = cs_get_weapon_silen(iEnt)
	
	new szAnimExtension[32]
	UT_GetWeaponExtension(iWeaponId, iShield, szAnimExtension, sizeof szAnimExtension - 1)
	UT_SetPlayerSequence(id, szAnimExtension)
	
	new iDrawAnimation = Get_CSWPN_Anim_Draw(iWeaponId, iSilen, iShield)
	UT_PlayWeaponAnim(id, iDrawAnimation)

	set_pdata_float(id, m_flNextAttack, 0.75, 5)
	set_pdata_float(iEnt, m_flTimeWeaponIdle, 1.5, 4)
	set_pdata_float(iEnt, m_flDecreaseShotsFired, get_gametime(), 4)
	
	set_pdata_int(id, m_iFOV, 90, 5)
	set_pdata_bool(id, m_fResumeZoom, false, 5)
	set_pdata_int(id, m_iLastZoom, 90, 5)
	
}
/* AMXX-Studio Notes - DO NOT MODIFY BELOW HERE
*{\\ rtf1\\ ansi\\ deff0{\\ fonttbl{\\ f0\\ fnil Tahoma;}}\n\\ viewkind4\\ uc1\\ pard\\ lang1033\\ f0\\ fs16 \n\\ par }
*/
