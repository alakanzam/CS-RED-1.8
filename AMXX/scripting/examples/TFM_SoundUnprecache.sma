/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>
#include <celltrie>

#define PLUGIN "[TFM] Unprecache"
#define VERSION "1.0"
#define AUTHOR "Nguyen Duy Linh"

#define UNPRECACHE_SOUND_FILE "TFM_SoundUnprecache.ini"
#define PRECACHE_SOUND_FILE "TFM_SoundPrecache.ini"

new Trie:iPreventedFile


public plugin_precache()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	if (!iPreventedFile)
		iPreventedFile = TrieCreate()
		
	new szCfgDir[64], szCfgFile[256]
	
	
	get_configsdir(szCfgDir, sizeof szCfgDir - 1)
	
	
	/*		UNPRECACHE SOUND CONFIG			*/
	
	formatex(szCfgFile, sizeof szCfgFile - 1, "%s/%s", szCfgDir, UNPRECACHE_SOUND_FILE)
	if (file_exists(szCfgFile))
	{
		new szTextInfo[256], iTextLen, szFile[128], szRemoveFlag[16]
		for (new iSoundPos = 0; iSoundPos < file_size(szCfgFile, 1); iSoundPos++)
		{
			read_file(szCfgFile, iSoundPos, szTextInfo, sizeof szTextInfo - 1, iTextLen)
			parse(szTextInfo, szFile, sizeof szFile - 1, szRemoveFlag, sizeof szRemoveFlag - 1)
			
			replace(szFile, sizeof szFile - 1, "[Unprecache]", "")
			replace(szRemoveFlag, sizeof szRemoveFlag - 1, "[Remove]", "")
			
			if (TrieKeyExists(iPreventedFile, szFile))
				continue
			
			if (str_to_num(szRemoveFlag))
				delete_file(szFile)
				
			TrieSetCell(iPreventedFile, szFile, 1)
		}
	}
	/*		UNPRECACHE GENERIC CONFIG		*/
	
	
	
	/*		PRECACHE SOUND CONFIG			*/
	
	formatex(szCfgFile, sizeof szCfgFile - 1, "%s/%s", szCfgDir, PRECACHE_SOUND_FILE)
	if (file_exists(szCfgFile))
	{
		new TXT[256], iTRASH
		for (new iSoundPos = 0; iSoundPos < file_size(szCfgFile, 1); iSoundPos++)
		{
			read_file(szCfgFile, iSoundPos, TXT, sizeof TXT - 1, iTRASH)
			engfunc(EngFunc_PrecacheSound, TXT)
		}
	}
	
	
	register_forward(FM_PrecacheSound, "fw_PrecacheSound")
	register_forward(FM_EmitSound, "fw_EmitSound_Pre")
	
}

public plugin_cfg()
{
	
}
public fw_PrecacheSound(szSound[])
{
	if (!TrieKeyExists(iPreventedFile, szSound))
		return FMRES_IGNORED
			
	forward_return(FMV_CELL, 0)
			
	return FMRES_SUPERCEDE
	
}

public fw_EmitSound_Pre(id, channel, const sample[], Float:volume, Float:attn, flags, pitch)
{
	if (!TrieKeyExists(iPreventedFile, sample))
		return FMRES_SUPERCEDE

	return FMRES_IGNORED
}

